{
    "openapi": "3.0.0",
    "info": {
        "title": "Documentation",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.rachitpatel.com/v1",
            "description": "Live Base URL"
        },
        {
            "url": "https://api-laravel.test/v1",
            "description": "Base URL"
        },
        {
            "url": "https://dp-api.local/v1",
            "description": "Base URL 1"
        },
        {
            "url": "http://127.0.0.1:8000/v1",
            "description": "Local Base URL"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Logs in a user and returns an access token",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "200"
                                        },
                                        "access-token": {
                                            "type": "string",
                                            "example": "Bearer {access_token}"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logs out the authenticated user and revokes the access token.",
                "operationId": "logout",
                "responses": {
                    "204": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "204"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh the authentication token",
                "description": "Revokes the existing token and generates a new token for the authenticated user.",
                "operationId": "0620fc3f15b3351c5a388cd1d0ee913f",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed"
                                        },
                                        "meta": {
                                            "properties": {
                                                "accessToken": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 60
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/email/verification-link": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send email verification notification",
                "operationId": "308c10b0198988dee06bc4633c26b6a8",
                "requestBody": {
                    "description": "Request body containing user email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating successful email sending",
                                            "type": "string",
                                            "example": "Verification email sent successfully"
                                        },
                                        "status": {
                                            "description": "Status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating that the email is already verified",
                                            "type": "string",
                                            "example": "Email already verified"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change user password after email verification",
                "description": "Change user password after email verification.",
                "operationId": "b773aaaeaa6d02a1785bb47b8d05fb91",
                "requestBody": {
                    "description": "Request body containing the verification token and new password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "description": "Verification token received in the email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "New password",
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation of the new password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating successful password change",
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        },
                                        "status": {
                                            "description": "Status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating expired verification token",
                                            "type": "string",
                                            "example": "Verification token has expired"
                                        },
                                        "status": {
                                            "description": "Status of the response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating invalid verification token",
                                            "type": "string",
                                            "example": "Invalid verification token"
                                        },
                                        "status": {
                                            "description": "Status of the response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/oauth/google": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Google authentication URL",
                "description": "Get the Google authentication URL.",
                "operationId": "4cad9f454e139c80557c4b33bc85aeff",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating successful login",
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "status": {
                                            "description": "Status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "string",
                                            "example": "200"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "description": "URL for Google authentication",
                                                    "type": "string",
                                                    "format": "url"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/google/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in with Google authentication",
                "description": "Log in with Google authentication.",
                "operationId": "9f4603884c7ea31616b823f550b12f04",
                "requestBody": {
                    "description": "Request body containing authentication code",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "authCode"
                                ],
                                "properties": {
                                    "authCode": {
                                        "description": "Authentication code received from Google",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating successful login",
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "status": {
                                            "description": "Status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "string",
                                            "example": "200"
                                        },
                                        "accessToken": {
                                            "description": "Access token for the user",
                                            "type": "string",
                                            "format": "text"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link",
                "description": "Send password reset link.",
                "operationId": "febbd99ec02533a62072c943c8864557",
                "requestBody": {
                    "description": "Request body containing user email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating successful password reset link sending",
                                            "type": "string",
                                            "example": "Password reset link sent successfully"
                                        },
                                        "status": {
                                            "description": "Status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user with the provided information.",
                "operationId": "f024dbf1273b8a27c30d428e9c1fb20d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "User's first name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "User's last name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "access-token": {
                                            "type": "string",
                                            "example": "your_access_token"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/auth/email/verify": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify user email",
                "operationId": "83528ae96e0cd0df06dd64b71e937051",
                "requestBody": {
                    "description": "Request body containing the verification token",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "description": "Verification token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating successful user verification",
                                            "type": "string",
                                            "example": "User verified successfully"
                                        },
                                        "status": {
                                            "description": "Status of the response",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating failure to verify email",
                                            "type": "string",
                                            "example": "Failed to verify email"
                                        },
                                        "status": {
                                            "description": "Status of the response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message indicating invalid verification token",
                                            "type": "string",
                                            "example": "Invalid verification token"
                                        },
                                        "status": {
                                            "description": "Status of the response",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "description": "HTTP status code",
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/device": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get list of all devices",
                "operationId": "eb744815d30238306021a383ed460f08",
                "responses": {
                    "200": {
                        "description": "Device data getting successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DeviceResource"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Devices"
                ],
                "summary": "Create a new Device",
                "description": "Create a new Device with the provided information.",
                "operationId": "createDevice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Device name",
                                        "type": "string",
                                        "example": "My company"
                                    },
                                    "device_vendor_id": {
                                        "description": "Device Vendor id",
                                        "type": "string",
                                        "example": "safsdfsf"
                                    },
                                    "api_key": {
                                        "description": "Device api key",
                                        "type": "string",
                                        "example": "Mydsfsdfds"
                                    },
                                    "device_type": {
                                        "description": "Device type",
                                        "type": "string",
                                        "example": "My company"
                                    },
                                    "status": {
                                        "description": "Device status",
                                        "type": "string",
                                        "example": "Active"
                                    },
                                    "device_sim": {
                                        "description": "Device Sim",
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "secret_key": {
                                        "description": "Device secret key",
                                        "type": "string",
                                        "example": "Acsdfgfgtive"
                                    },
                                    "device_model": {
                                        "description": "Device model",
                                        "type": "string",
                                        "example": "Active vcxzv"
                                    },
                                    "rfid": {
                                        "description": "Device rfid",
                                        "type": "string",
                                        "example": "Yes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Device created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeviceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/device/{id}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Show a specific Device",
                "description": "Fetch details of a Device by their ID.",
                "operationId": "showDevice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Device to show",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "9d445a1c-cee5-4a68-b729-9edf8df71d87"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device data fetch successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeviceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Device ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred on the server"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Devices"
                ],
                "summary": "Update a specific Device",
                "description": "Update the details of a Device by their ID.",
                "operationId": "updateDevice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Device to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Device data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Device name",
                                        "type": "string",
                                        "example": "My company"
                                    },
                                    "device_vendor_id": {
                                        "description": "Device Vendor id",
                                        "type": "string",
                                        "example": "safsdfsf"
                                    },
                                    "api_key": {
                                        "description": "Device api key",
                                        "type": "string",
                                        "example": "Mydsfsdfds"
                                    },
                                    "device_type": {
                                        "description": "Device type",
                                        "type": "string",
                                        "example": "My company"
                                    },
                                    "status": {
                                        "description": "Device status",
                                        "type": "string",
                                        "example": "Active"
                                    },
                                    "device_sim": {
                                        "description": "Device Sim",
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "secret_key": {
                                        "description": "Device secret key",
                                        "type": "string",
                                        "example": "Acsdfgfgtive"
                                    },
                                    "device_model": {
                                        "description": "Device model",
                                        "type": "string",
                                        "example": "Active vcxzv"
                                    },
                                    "rfid": {
                                        "description": "Device rfid",
                                        "type": "string",
                                        "example": "Yes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Device updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Devices"
                ],
                "summary": "Delete a specific Device",
                "description": "Delete a Device by their ID.",
                "operationId": "deleteDevice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Device to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Device deleted successfully"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                }
            }
        },
        "/device/vendor": {
            "get": {
                "tags": [
                    "DeviceVendors"
                ],
                "summary": "List all device vendors",
                "description": "Retrieve a list of all device vendors.",
                "operationId": "listDeviceVendors",
                "responses": {
                    "200": {
                        "description": "List of device vendors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "device vendors data retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DeviceVendorResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/device/vendor/": {
            "post": {
                "tags": [
                    "DeviceVendors"
                ],
                "summary": "Create a new Device vendor",
                "description": "Create a new Device vendorv with the provided information.",
                "operationId": "createDeviceVendor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "vendor company name",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Device vendor created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device vendor created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeviceVendorResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/device/vendor/{id}": {
            "get": {
                "tags": [
                    "DeviceVendors"
                ],
                "summary": "Show a specific Device Vendor",
                "description": "Fetch details of a Device Vendor by their ID.",
                "operationId": "showDeviceVendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Device Vendor to show",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "9d445a1c-cee5-4a68-b729-9edf8df71d87"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device Vendor details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device Vendor data fetch successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeviceVendorResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Device Vendor ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred on the server"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "DeviceVendors"
                ],
                "summary": "Update a specific Device Vendor",
                "description": "Update the details of a Device Vendor by their ID.",
                "operationId": "updateDeviceVendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Device Vendor to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Device Vendor data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Device Vendor name",
                                        "type": "string",
                                        "example": "My company"
                                    },
                                    "status": {
                                        "description": "Device Vendor status",
                                        "type": "string",
                                        "example": "Active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Device Vendor updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device Vendor not found"
                    }
                }
            }
        },
        "/device/Vendor/{id}": {
            "delete": {
                "tags": [
                    "DeviceVendors"
                ],
                "summary": "Delete Vendor a specific Device",
                "description": "Delete a Device Vendor by their ID.",
                "operationId": "deleteDeviceVendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Device Vendor to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Device Vendor deleted successfully"
                    },
                    "404": {
                        "description": "Device Vendor not found"
                    }
                }
            }
        },
        "/doctor": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "List all Doctors",
                "description": "Retrieve a list of all Doctors.",
                "operationId": "listDoctors",
                "responses": {
                    "200": {
                        "description": "List of Doctors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Doctors data retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DoctorResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Create a new Doctor",
                "description": "Create a new Doctor with the provided information.",
                "operationId": "createDoctor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "Doctor's first name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Doctor's last name",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "Doctor's gender",
                                        "type": "string"
                                    },
                                    "dob": {
                                        "description": "Date of birth (YYYY-MM-DD)",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "clinic_address": {
                                        "description": "Doctor's clinic address",
                                        "type": "string"
                                    },
                                    "mobile_no": {
                                        "description": "Doctor's mobile number",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Doctor's email address",
                                        "type": "string"
                                    },
                                    "hospital_id ": {
                                        "description": "hospital_id ",
                                        "type": "string"
                                    },
                                    "marital_status": {
                                        "description": "Marital status",
                                        "type": "string"
                                    },
                                    "specialization": {
                                        "description": "specialization by the doctor",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Doctor created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Doctor created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DoctorResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/doctor/{id}": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Show a specific Doctor",
                "description": "Fetch details of a Doctor by their ID.",
                "operationId": "showDoctor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Doctor to show",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "9d445a1c-cee5-4a68-b729-9edf8df71d87"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doctor details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile fetch successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DoctorResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Doctor ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred on the server"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Update a specific Doctor",
                "description": "Update the details of a Doctor by their ID.",
                "operationId": "updateDoctor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Doctor to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Doctor data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "Doctor's first name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Doctor's last name",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "Doctor's gender",
                                        "type": "string"
                                    },
                                    "dob": {
                                        "description": "Date of birth (YYYY-MM-DD)",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "clinic_address": {
                                        "description": "Doctor's clinic address",
                                        "type": "string"
                                    },
                                    "mobile_no": {
                                        "description": "Doctor's mobile number",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Doctor's email address",
                                        "type": "string"
                                    },
                                    "hospital_id ": {
                                        "description": "hospital_id ",
                                        "type": "string"
                                    },
                                    "marital_status": {
                                        "description": "Marital status",
                                        "type": "string"
                                    },
                                    "specialization": {
                                        "description": "specialization by the doctor",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Doctor updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DoctorResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Doctor not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Delete a specific Doctor",
                "description": "Delete a Doctor by their ID.",
                "operationId": "deleteDoctor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Doctor to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Doctor deleted successfully"
                    },
                    "404": {
                        "description": "Doctor not found"
                    }
                }
            }
        },
        "/doctor/specialization": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "List all Doctor Specializations",
                "description": "Retrieve a list of all Doctor Specializations.",
                "operationId": "listSpecializations",
                "responses": {
                    "200": {
                        "description": "List of Doctor Specializations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Doctor Specializations data retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DoctorSpecializationResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Create a new Doctor specialization",
                "description": "Create a new Doctor specialization with the provided information.",
                "operationId": "createDoctorSpecialization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Doctor specialization's name",
                                        "type": "string"
                                    },
                                    "code": {
                                        "description": "Doctor specialization's code",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Doctor specialization's description",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Doctor specialization created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Doctor specialization created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DoctorSpecializationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/doctor/specialization/{id}": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Show a specific Doctor specialization",
                "description": "Fetch details of a Doctor specialization by their ID.",
                "operationId": "showDoctorSpecialization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Doctor specialization to show",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "9d445a1c-cee5-4a68-b729-9edf8df71d87"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doctor specialization details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "specialization fetch successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DoctorSpecializationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Doctor specialization ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred on the server"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Update a specific Doctor specialization",
                "description": "Update the details of a Doctor specialization by their ID.",
                "operationId": "updateDoctorSpecialization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Doctor specialization to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Doctor specialization data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Doctor specialization's name",
                                        "type": "string"
                                    },
                                    "code": {
                                        "description": "Doctor specialization's code",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Doctor specialization's description",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Doctor specialization updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DoctorSpecializationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Doctor specialization not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Delete a specific Doctor specialization",
                "description": "Delete a Doctor  specialization by their ID.",
                "operationId": "deleteDoctorSpecialization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Doctor specialization to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Doctor specialization deleted successfully"
                    },
                    "404": {
                        "description": "Doctor specialization not found"
                    }
                }
            }
        },
        "/hospital": {
            "get": {
                "tags": [
                    "Hospitals"
                ],
                "summary": "Get list of all devices",
                "operationId": "7a6637573e25f25cac0b4ce90edd5543",
                "responses": {
                    "200": {
                        "description": "Hospital data getting successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HospitalResource"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Hospitals"
                ],
                "summary": "Create a new Hospital",
                "description": "Create a new Hospital with the provided information.",
                "operationId": "createHospital",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "test name"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "JohnDoe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1231231231"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "hos@gmail.com"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Asddfdsfererer"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "Active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Hospital created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hospital created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/HospitalResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/hospital/{id}": {
            "get": {
                "tags": [
                    "Hospitals"
                ],
                "summary": "Show a specific Hospital",
                "description": "Fetch details of a Hospital by their ID.",
                "operationId": "showHospital",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Hospital to show",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "9d445a1c-cee5-4a68-b729-9edf8df71d87"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hospital details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hospital data fetch successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/HospitalResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Hospital ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred on the server"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Hospitals"
                ],
                "summary": "Update a specific Hospital",
                "description": "Update the details of a Hospital by their ID.",
                "operationId": "updateHospital",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Hospital to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Hospital data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Hospital name",
                                        "type": "string",
                                        "example": "My company"
                                    },
                                    "device_vendor_id": {
                                        "description": "Hospital Vendor id",
                                        "type": "string",
                                        "example": "safsdfsf"
                                    },
                                    "api_key": {
                                        "description": "Hospital api key",
                                        "type": "string",
                                        "example": "Mydsfsdfds"
                                    },
                                    "device_type": {
                                        "description": "Hospital type",
                                        "type": "string",
                                        "example": "My company"
                                    },
                                    "status": {
                                        "description": "Hospital status",
                                        "type": "string",
                                        "example": "Active"
                                    },
                                    "device_sim": {
                                        "description": "Hospital Sim",
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "secret_key": {
                                        "description": "Hospital secret key",
                                        "type": "string",
                                        "example": "Acsdfgfgtive"
                                    },
                                    "device_model": {
                                        "description": "Hospital model",
                                        "type": "string",
                                        "example": "Active vcxzv"
                                    },
                                    "rfid": {
                                        "description": "Hospital rfid",
                                        "type": "string",
                                        "example": "Yes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hospital updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HospitalResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Hospital not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Hospitals"
                ],
                "summary": "Delete a specific Hospital",
                "description": "Delete a Hospital by their ID.",
                "operationId": "deleteHospital",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Hospital to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Hospital deleted successfully"
                    },
                    "404": {
                        "description": "Hospital not found"
                    }
                }
            }
        },
        "/lab": {
            "get": {
                "tags": [
                    "Labs"
                ],
                "summary": "Get list of all Labs",
                "operationId": "a3f3b396c3ebd7411079fc8f4f2d2f4b",
                "responses": {
                    "200": {
                        "description": "Lab data getting successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LabResource"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Labs"
                ],
                "summary": "Create a new Lab",
                "description": "Create a new Lab with the provided information.",
                "operationId": "createLab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "test name"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "JohnDoe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1231231231"
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "example": "hos-gmail.com"
                                    },
                                    "reports": {
                                        "description": "lab reports",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Lab created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lab created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/LabResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/lab/{id}": {
            "get": {
                "tags": [
                    "Labs"
                ],
                "summary": "Show a specific Lab",
                "description": "Fetch details of a Lab by their ID.",
                "operationId": "showLab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Lab to show",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "9d445a1c-cee5-4a68-b729-9edf8df71d87"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lab details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lab data fetch successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/LabResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Lab ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred on the server"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Labs"
                ],
                "summary": "Update a specific Lab",
                "description": "Update the details of a Lab by their ID.",
                "operationId": "updateLab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Lab to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Lab data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "test name"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "JohnDoe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1231231231"
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "example": "hos-gmail.com"
                                    },
                                    "reports": {
                                        "description": "lab reports",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lab updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LabResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lab not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Labs"
                ],
                "summary": "Delete a specific Lab",
                "description": "Delete a Lab by their ID.",
                "operationId": "deleteLab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Lab to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Lab deleted successfully"
                    },
                    "404": {
                        "description": "Lab not found"
                    }
                }
            }
        },
        "/patient": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "List all patients",
                "description": "Retrieve a list of all patients.",
                "operationId": "listPatients",
                "responses": {
                    "200": {
                        "description": "List of patients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patients data retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PatientResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Create a new patient",
                "description": "Create a new patient with the provided information.",
                "operationId": "createPatient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "Patient's first name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Patient's last name",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "Patient's gender",
                                        "type": "string"
                                    },
                                    "dob": {
                                        "description": "Date of birth (YYYY-MM-DD)",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "address": {
                                        "description": "Patient's address",
                                        "type": "string"
                                    },
                                    "mobile_no": {
                                        "description": "Patient's mobile number",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Patient's email address",
                                        "type": "string"
                                    },
                                    "id_type": {
                                        "description": "ID type",
                                        "type": "string"
                                    },
                                    "id_number": {
                                        "description": "ID number",
                                        "type": "string"
                                    },
                                    "arn_number": {
                                        "description": "ARN number",
                                        "type": "string"
                                    },
                                    "marital_status": {
                                        "description": "Marital status",
                                        "type": "string"
                                    },
                                    "primary_phone": {
                                        "description": "Primary phone number",
                                        "type": "string"
                                    },
                                    "secondary_phone": {
                                        "description": "Secondary phone number",
                                        "type": "string"
                                    },
                                    "home_phone": {
                                        "description": "Home phone number",
                                        "type": "string"
                                    },
                                    "work_phone": {
                                        "description": "Work phone number",
                                        "type": "string"
                                    },
                                    "languages": {
                                        "description": "Languages spoken by the patient",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "medical_aid": {
                                        "description": "Medical aid",
                                        "type": "string"
                                    },
                                    "race": {
                                        "description": "Race",
                                        "type": "string"
                                    },
                                    "ethnicity": {
                                        "description": "Ethnicity",
                                        "type": "string"
                                    },
                                    "mrn_number": {
                                        "description": "MRN number",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PatientResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/patient/{id}": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Show a specific patient",
                "description": "Fetch details of a patient by their ID.",
                "operationId": "showPatient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient to show",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "9d445a1c-cee5-4a68-b729-9edf8df71d87"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile fetch successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PatientResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid patient ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred on the server"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Patients"
                ],
                "summary": "Update a specific patient",
                "description": "Update the details of a patient by their ID.",
                "operationId": "updatePatient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated patient data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "Patient's first name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Patient's last name",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "Patient's gender",
                                        "type": "string"
                                    },
                                    "dob": {
                                        "description": "Date of birth (YYYY-MM-DD)",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "address": {
                                        "description": "Patient's address",
                                        "type": "string"
                                    },
                                    "mobile_no": {
                                        "description": "Patient's mobile number",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Patient's email address",
                                        "type": "string"
                                    },
                                    "id_type": {
                                        "description": "ID type",
                                        "type": "string"
                                    },
                                    "id_number": {
                                        "description": "ID number",
                                        "type": "string"
                                    },
                                    "arn_number": {
                                        "description": "ARN number",
                                        "type": "string"
                                    },
                                    "marital_status": {
                                        "description": "Marital status",
                                        "type": "string"
                                    },
                                    "primary_phone": {
                                        "description": "Primary phone number",
                                        "type": "string"
                                    },
                                    "secondary_phone": {
                                        "description": "Secondary phone number",
                                        "type": "string"
                                    },
                                    "home_phone": {
                                        "description": "Home phone number",
                                        "type": "string"
                                    },
                                    "work_phone": {
                                        "description": "Work phone number",
                                        "type": "string"
                                    },
                                    "languages": {
                                        "description": "Languages spoken by the patient",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "medical_aid": {
                                        "description": "Medical aid",
                                        "type": "string"
                                    },
                                    "race": {
                                        "description": "Race",
                                        "type": "string"
                                    },
                                    "ethnicity": {
                                        "description": "Ethnicity",
                                        "type": "string"
                                    },
                                    "mrn_number": {
                                        "description": "MRN number",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete a specific patient",
                "description": "Delete a patient by their ID.",
                "operationId": "deletePatient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Patient deleted successfully"
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                }
            }
        },
        "/report": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get list of all Reports",
                "operationId": "d613ba05b9771fbacd62ea7d57a43a13",
                "responses": {
                    "200": {
                        "description": "Report data getting successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReportResource"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Create a new Report",
                "description": "Create a new Report with the provided information.",
                "operationId": "createReport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "test name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Asddfdsfererer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Report created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Report created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReportResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/report/{id}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Show a specific Report",
                "description": "Fetch details of a Report by their ID.",
                "operationId": "showReport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Report to show",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "9d445a1c-cee5-4a68-b729-9edf8df71d87"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Report data fetch successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReportResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Report ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred on the server"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reports"
                ],
                "summary": "Update a specific Report",
                "description": "Update the details of a Report by their ID.",
                "operationId": "updateReport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Report to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Report data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Report name",
                                        "type": "string",
                                        "example": "My company"
                                    },
                                    "description": {
                                        "description": "Report description",
                                        "type": "string",
                                        "example": "safsdfsf"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Report updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reports"
                ],
                "summary": "Delete a specific Report",
                "description": "Delete a Report by their ID.",
                "operationId": "deleteReport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Report to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Report deleted successfully"
                    },
                    "404": {
                        "description": "Report not found"
                    }
                }
            }
        },
        "/permission/list": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get All permissions",
                "description": "Display all the permissions",
                "operationId": "showpermissions",
                "requestBody": {},
                "responses": {
                    "204": {
                        "description": "Permissions data show successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions data get successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/permission/{id}": {
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update permission",
                "description": "Updates the permission's name",
                "operationId": "updatePermissionProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermissionUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Permission updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/permission/": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Create a new permission",
                "description": "Create a new permission with the provided information.",
                "operationId": "9c02feca66134eb67ba5bf49ab558d7f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Permission's name",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Permission Created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/role/list": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get All roles",
                "description": "Display all the roles",
                "operationId": "showRoles",
                "requestBody": {},
                "responses": {
                    "204": {
                        "description": "Roles data show successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Roles data get successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/role/{id}": {
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update role",
                "description": "Updates the role's name",
                "operationId": "updateRoleProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/role/": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Create a new role",
                "description": "Create a new role with the provided information.",
                "operationId": "2d421f2bcc698508500668000572ad3e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Role's name",
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "description": "Permission's name",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role Created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/list": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "List all users",
                "description": "Retrieve a list of all users with their roles and permissions",
                "operationId": "listUsers",
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/show/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Show user profile",
                "description": "Display the user's name and job title in the profile",
                "operationId": "showUserProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to show",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Profile data show successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/update/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user profile",
                "description": "Updates the user's Profile information",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/change-password": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Change User Password",
                "description": "Change the user's password.",
                "operationId": "changePassword",
                "requestBody": {
                    "description": "Password change request data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "current_password": {
                                        "description": "Current password",
                                        "type": "string",
                                        "example": "old_password"
                                    },
                                    "new_password": {
                                        "description": "New password",
                                        "type": "string",
                                        "example": "new_password"
                                    },
                                    "new_password_confirmation": {
                                        "description": "Confirm new password",
                                        "type": "string",
                                        "example": "new_password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/delete/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete User",
                "description": "Delete a user by ID.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "RegisterRequest": {
                "title": "User Registration Request",
                "description": "Schema for the user registration request",
                "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "password"
                ],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "John"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "DeviceCreateRequest": {
                "title": "Device Create Request",
                "description": "Request data for creating Device profile.",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Device name",
                        "type": "string",
                        "example": "My company"
                    },
                    "status": {
                        "description": "Device status",
                        "type": "string",
                        "example": "Active"
                    }
                },
                "type": "object"
            },
            "DeviceUpdateRequest": {
                "title": "Device Update Request",
                "description": "Request data for update Device profile.",
                "required": [
                    "name",
                    "device_vendor_id",
                    "status",
                    "api_key",
                    "device_type"
                ],
                "properties": {
                    "name": {
                        "description": "Device name",
                        "type": "string",
                        "example": "My company"
                    },
                    "device_vendor_id": {
                        "description": "Device Vendor id",
                        "type": "string",
                        "example": "safsdfsf"
                    },
                    "api_key": {
                        "description": "Device api key",
                        "type": "string",
                        "example": "Mydsfsdfds"
                    },
                    "device_type": {
                        "description": "Device type",
                        "type": "string",
                        "example": "My company"
                    },
                    "status": {
                        "description": "Device status",
                        "type": "string",
                        "example": "Active"
                    },
                    "device_sim": {
                        "description": "Device Sim",
                        "type": "string",
                        "example": "No"
                    },
                    "secret_key": {
                        "description": "Device secret key",
                        "type": "string",
                        "example": "Acsdfgfgtive"
                    },
                    "device_model": {
                        "description": "Device model",
                        "type": "string",
                        "example": "Active vcxzv"
                    },
                    "rfid": {
                        "description": "Device rfid",
                        "type": "string",
                        "example": "Yes"
                    }
                },
                "type": "object"
            },
            "DeviceVendorCreateRequest": {
                "title": "Device Vendor Create Request",
                "description": "Request data for creating Device Vendor profile.",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Device Vendor's company name",
                        "type": "string",
                        "example": "My company"
                    },
                    "status": {
                        "description": "Device Vendor status",
                        "type": "string",
                        "example": "Active"
                    }
                },
                "type": "object"
            },
            "DeviceResource": {
                "title": "Device Resource",
                "description": "Device resource representation",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "asdfasdfsadfsd"
                    },
                    "name": {
                        "type": "string",
                        "example": "test name"
                    },
                    "device_vendor_id": {
                        "type": "string",
                        "example": "fasdfsdaf"
                    },
                    "api_key": {
                        "type": "string",
                        "example": "JohnDoe"
                    },
                    "device_type": {
                        "type": "string",
                        "example": "test"
                    },
                    "device_sim": {
                        "type": "string",
                        "example": "Yes"
                    },
                    "secret_key": {
                        "type": "string",
                        "example": "Asddfdsfererer"
                    },
                    "device_model": {
                        "type": "string",
                        "example": "open model"
                    },
                    "rfid": {
                        "type": "string",
                        "example": "No"
                    },
                    "status": {
                        "type": "string",
                        "example": "Active"
                    }
                },
                "type": "object"
            },
            "DeviceVendorResource": {
                "title": "Device Vendor Resource",
                "description": "Device Vendor resource representation",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "status": {
                        "type": "string",
                        "example": "Active"
                    }
                },
                "type": "object"
            },
            "DoctorCreateRequest": {
                "title": "Doctor Create Request",
                "description": "Request data for creating Doctor profile.",
                "required": [
                    "name",
                    "job_title"
                ],
                "properties": {
                    "first_name": {
                        "description": "Doctor's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "description": "Doctor's last name",
                        "type": "string",
                        "example": "John"
                    },
                    "gender": {
                        "description": "Doctor's gender",
                        "type": "string",
                        "example": "Doe"
                    }
                },
                "type": "object"
            },
            "DoctorSpecializationCreateRequest": {
                "title": "Doctor Specialization Create Request",
                "description": "Request data for creating Doctor Specialization.",
                "required": [
                    "name",
                    "descriptiion"
                ],
                "properties": {
                    "name": {
                        "description": "Doctor Specialization's name",
                        "type": "string",
                        "example": "John"
                    },
                    "descriptiion": {
                        "description": "Doctor Specialization's description",
                        "type": "string",
                        "example": "John"
                    }
                },
                "type": "object"
            },
            "DoctorResource": {
                "title": "Doctor Resource",
                "description": "Doctor resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "user"
                        }
                    },
                    "gender": {
                        "type": "string",
                        "example": "Male"
                    }
                },
                "type": "object"
            },
            "DoctorSpecializationResource": {
                "title": "Doctor Specialization Resource",
                "description": "Doctor Specialization resource representation",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "description": {
                        "type": "string",
                        "example": "Test addresses"
                    }
                },
                "type": "object"
            },
            "HospitalCreateRequest": {
                "title": "Hospital Create Request",
                "description": "Request data for creating Hospital profile.",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Hospital name",
                        "type": "string",
                        "example": "My company"
                    },
                    "status": {
                        "description": "Hospital status",
                        "type": "string",
                        "example": "Active"
                    }
                },
                "type": "object"
            },
            "HospitalResource": {
                "title": "Hospital Resource",
                "description": "Hospital resource representation",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "asdfasdfsadfsd"
                    },
                    "name": {
                        "type": "string",
                        "example": "test name"
                    },
                    "location": {
                        "type": "string",
                        "example": "JohnDoe"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1231231231"
                    },
                    "email": {
                        "type": "string",
                        "example": "hos@gmail.com"
                    },
                    "description": {
                        "type": "string",
                        "example": "Asddfdsfererer"
                    },
                    "status": {
                        "type": "string",
                        "example": "Active"
                    }
                },
                "type": "object"
            },
            "LabCreateRequest": {
                "title": "Lab Create Request",
                "description": "Request data for creating Lab profile.",
                "required": [
                    "name",
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Lab's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "address": {
                        "description": "Lab's job title",
                        "type": "string",
                        "example": "Doe"
                    }
                },
                "type": "object"
            },
            "LabResource": {
                "title": "Lab Resource",
                "description": "Lab resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "address": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "user"
                        }
                    },
                    "gender": {
                        "type": "string",
                        "example": "Male"
                    }
                },
                "type": "object"
            },
            "PatientCreateRequest": {
                "title": "Patient Create Request",
                "description": "Request data for creating Patient profile.",
                "required": [
                    "name",
                    "job_title"
                ],
                "properties": {
                    "name": {
                        "description": "Patient's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "job_title": {
                        "description": "Patient's job title",
                        "type": "string",
                        "example": "Doe"
                    }
                },
                "type": "object"
            },
            "PatientResource": {
                "title": "Patient Resource",
                "description": "Patient resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "user"
                        }
                    },
                    "gender": {
                        "type": "string",
                        "example": "Male"
                    }
                },
                "type": "object"
            },
            "ReportCreateRequest": {
                "title": "Report Create Request",
                "description": "Request data for creating Report profile.",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Report name",
                        "type": "string",
                        "example": "My company"
                    },
                    "description": {
                        "description": "Report description",
                        "type": "string",
                        "example": "Active"
                    }
                },
                "type": "object"
            },
            "ReportResource": {
                "title": "Report Resource",
                "description": "Report resource representation",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "asdfasdfsadfsd"
                    },
                    "name": {
                        "type": "string",
                        "example": "test name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Asddfdsfererer"
                    }
                },
                "type": "object"
            },
            "PermissionUpdateRequest": {
                "title": "Permission Update Request",
                "description": "Request data for updating Permission.",
                "required": [
                    "name",
                    "admin"
                ],
                "properties": {
                    "name": {
                        "description": "Permission's name",
                        "type": "string",
                        "example": "Admin"
                    }
                },
                "type": "object"
            },
            "RoleCreateRequest": {
                "title": "Role Create Request",
                "description": "Request data for creating role.",
                "required": [
                    "permissions",
                    "test,test1,test2"
                ],
                "properties": {
                    "name": {
                        "description": "Role's name",
                        "type": "string",
                        "example": "Admin"
                    },
                    "permissions": {
                        "description": "Permission's name",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "RoleUpdateRequest": {
                "title": "Role Update Request",
                "description": "Request data for updating role.",
                "required": [
                    "permissions",
                    "test,test1,test2"
                ],
                "properties": {
                    "name": {
                        "description": "Role's name",
                        "type": "string",
                        "example": "Admin"
                    },
                    "permissions": {
                        "description": "Permission's name",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "UserUpdateRequest": {
                "title": "Profile Update Request",
                "description": "Request data for updating user profile.",
                "required": [
                    "name",
                    "gender",
                    "dob",
                    "address"
                ],
                "properties": {
                    "first_name": {
                        "description": "User's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "description": "User's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "mobile_no": {
                        "description": "User's Phone Number",
                        "type": "number",
                        "example": "1234567895"
                    },
                    "profile_image": {
                        "description": "User's image",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "PermissionResource": {
                "title": "Permission Resource",
                "description": "Permission resource representation",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin"
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "title": "Role Resource",
                "description": "Role resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User resource representation",
                "properties": {
                    "uuid": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "gender": {
                        "type": "string",
                        "example": "male"
                    },
                    "dob": {
                        "type": "string",
                        "example": "2022-02-25"
                    },
                    "mobile_no": {
                        "type": "string",
                        "example": "1234567895"
                    },
                    "address": {
                        "type": "string",
                        "example": "Test Address"
                    },
                    "profile_image": {
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "500": {
                "description": "Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Oops something went wrong"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "error"
                                },
                                "statusCode": {
                                    "type": "integer",
                                    "example": 500
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "403": {
                "description": "Unauthorized: Permission denied",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized: User Unauthorized"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "error"
                                },
                                "statusCode": {
                                    "type": "integer",
                                    "example": 403
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "401": {
                "description": "Forbidden: Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthenticated"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "error"
                                },
                                "statusCode": {
                                    "type": "integer",
                                    "example": 401
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "404": {
                "description": "Resource Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Resource Not Found"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "error"
                                },
                                "statusCode": {
                                    "type": "integer",
                                    "example": 404
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "422": {
                "description": "Validation Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Validation error"
                                },
                                "errors": {
                                    "type": "object",
                                    "example": {
                                        "field_name": [
                                            "The field_name field is required."
                                        ]
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "example": "error"
                                },
                                "statusCode": {
                                    "type": "integer",
                                    "example": 422
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Devices",
            "description": "Devices"
        },
        {
            "name": "DeviceVendors",
            "description": "DeviceVendors"
        },
        {
            "name": "Doctors",
            "description": "Doctors"
        },
        {
            "name": "Hospitals",
            "description": "Hospitals"
        },
        {
            "name": "Labs",
            "description": "Labs"
        },
        {
            "name": "Patients",
            "description": "Patients"
        },
        {
            "name": "Reports",
            "description": "Reports"
        },
        {
            "name": "Permission",
            "description": "Permission"
        },
        {
            "name": "Role",
            "description": "Role"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}